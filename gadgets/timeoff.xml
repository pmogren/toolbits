<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Time Off">
  <Require feature="wave-preview" /> 
  <Require feature="dynamic-height" /> 
  </ModulePrefs>
  <Content type="html">
 <![CDATA[ 

 <style>
        table.main {
                border-collapse: collapse;
                text-align: center;
                font: 9px/10px Verdana, Arial, Helvetica, sans-serif;
        }
        table.main thead {
                background: #CADEF0;
        }
        table.main tbody tr {
                border-bottom: 1px solid #AAAAAA;
        }
	td.we {
                background: #555555;
	}
</style>
 
  <script type="text/javascript">

    var curDate = new Date();

    var e = {
      show:function(id){$(id).style.display='block';}, 
      hide:function(id){$(id).style.display='none';}, 
      write:function(id,msg){$(id).innerHTML = msg;},
      create:function(element){return document.createElement(element);}
    }

    function $(id){
      return document.getElementById(id);
    }

function create_td(tr, info){
        var td = e.create("td");
        td.innerHTML = info;
        tr.appendChild(td);
}

function create_td_class(tr, class, info){
        var td = e.create("td");
        td.innerHTML = info;
        tr.appendChild(td);
	td.setAttribute('class', class);
}

function create_header(now){
        var numDays = getDays(now);
	var dayOfW = now.getDay();

        var tr = e.create("tr");
        create_td(tr, "");
        for(var i = 0; i < numDays; i++ ) {
		if((i + dayOfW) % 7 == 0 )
                	create_td_class(tr, "we", i+1);
		else
                	create_td(tr, i+1);
        }
        $("headder").appendChild(tr);
        
}

function create_row(now, person){
        var month = now.getMonth();
        var year  = now.getYear();
        year += 1900;

        var numDays = getDays(now);
        var col_date = new Date(year, month, 1);
        var dates = person.dates;

        var tr = e.create("tr");
        create_td(tr, person.name);

        for(var i = 0; i < numDays; i++ ) {
                var found = false;
                var dates = person.dates;
                for(entry in dates){
                        var d = dates[entry];
			var start = new Date();
			var end = new Date();
			start.setTime(d.s);
			end.setTime(d.e);
                        if(start <= col_date && end >= col_date)
                                found = true;
                }
                if(found)
                        create_td(tr, "*");
                else
                        create_td(tr, " ");
                col_date.setDate( col_date.getDate() + 1);
        }
        $("content").appendChild(tr);
        
}

function getMonthName(d)
{
        var month = d.getMonth();
        var m_names = new Array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December");
        return m_names[month];
}

function getDays(d)  {
        var month = d.getMonth() + 1;
        var year  = d.getYear();
        year += 1900;
        var days;
        if (month==1 || month==3 || month==5 || month==7 || month==8 || month==10 || month==12)
                days=31;
        else if (month==4 || month==6 || month==9 || month==11)
                days=30;
        else {
                if (isLeapYear(year))
                        days=29;
                else 
                        days=28;
        }
        return (days);
}

function isLeapYear (Year) {
        if (((Year % 4)==0) && ((Year % 100)!=0) || ((Year % 400)==0))
                return (true);
        else 
                return (false);
}


    function renderInfo() {
      if (!wave.getState()) {
        return;
      }
      
      var viewerId = wave.getViewer().getId();
      var state = wave.getState();
      var participants = wave.getParticipants();
      var numPeople = participants.length;
      var now   = curDate;
      var person;

      e.write("month", getMonthName(now));
      e.write("year", now.getFullYear());
      e.write("headder","");
      e.write("content","");
      create_header(now);

      if (participants) {
        for (var i = 0; i < participants.length; ++i) {
          var u = participants[i];
          eval("person = " + wave.getState().get(u.getId()));
          if(!person){
            person = {};
          }
          person.name = u.getDisplayName();
          if (!person.name) {
            person.name = u.getId();
          }

          create_row(now, person);
        }
      }

      
      e.write("list","");
      eval("person = " + wave.getState().get(viewerId));
      var dates = person.dates;
      if(dates){
        for(entry in dates){
          var tr = e.create("tr");
          var d = dates[entry];
          var start = new Date();
          var end = new Date();
          start.setTime(d.s);
          end.setTime(d.e);
          create_td(tr, (start.getMonth()+1) + "/" + start.getDate() + "/" + start.getFullYear() + " - " + (end.getMonth()+1) + "/" + end.getDate() + "/" + end.getFullYear());
	  create_td(tr, '<input type=button value="X" id="del" onClick="del('+ entry +')">');
          $("list").appendChild(tr);
        }
      }
      gadgets.window.adjustHeight();
    }

    function getId(){
      return wave.getTime();
    }

    function buttonClicked(){
      var id = getId();
      var viewerId = wave.getViewer().getId();
      var start = new Date($("s").value).getTime();
      var end = new Date($("e").value).getTime();
      var delta = {};
      var person;
      eval("person = " + wave.getState().get(viewerId));
      if(!person)
        person = {};
      if(!person.dates)
        person.dates = {};
      person.dates[id] = {};
      person.dates[id].s = start;
      person.dates[id].e = end;
      delta[viewerId] = wave.util.printJson(person);
      wave.getState().submitDelta(delta);
    }

    function nextMonth(){
      curDate.setMonth(curDate.getMonth() + 1);
      renderInfo()
    }

    function prevMonth(){
      curDate.setMonth(curDate.getMonth() - 1);
      renderInfo()
    }

    function del(id){
      var delta = {};
      var viewerId = wave.getViewer().getId();
      var person;
      eval("person = " + wave.getState().get(viewerId));
      delete person.dates[id];
      delta[viewerId] = wave.util.printJson(person);
      wave.getState().submitDelta(delta);
    }

    function init() {
      if (wave && wave.isInWaveContainer()) {
        wave.setStateCallback(renderInfo);
        wave.setParticipantCallback(renderInfo);
      }
    }
    gadgets.util.registerOnLoadHandler(init);

  </script>

  <table width="100%">
    <tr>
      <td align="right"><input type=button value="<" id="prev" onClick="prevMonth()"></td>
      <td width="200px" align="center"><span id="month"></span>&nbsp;<span id="year"></span></td>
      <td align="left"><input type=button value=">" id="next" onClick="nextMonth()"></td>
    </tr>
  </table>

  <table class="main" width="100%">
    <thead id="headder"></thead>
    <tbody id="content"></tbody>
  </table>

  <br/><br/>
  <table>
    <tbody id="list"></tbody>
  </table>

  <table>
    <tr><td>Start:</td><td><input id="s"></input></td></tr>
    <tr><td>End:</td><td><input id="e"></input></td></tr>
    <tr><td></td><td><input type=button value="Add" id="add" onClick="buttonClicked()"></td></tr>
  </table>


  ]]> 
  </Content>
  </Module>
